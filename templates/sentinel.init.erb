#!/bin/sh
#Configurations injected by install_server below....

SENTINEL_PORT="<%= @sentinel_port %>"

CONF="/etc/redis/${SENTINEL_PORT}.conf"
EXEC="<%= scope.lookupvar('redis::redis_bin_dir') %>/bin/redis-server $CONF --sentinel"
CLIEXEC="<%= scope.lookupvar('redis::redis_bin_dir') %>/bin/redis-cli -p $SENTINEL_PORT"
PIDFILE="/var/run/redis_${SENTINEL_PORT}.pid"

###############

# chkconfig: 2345 95 20
# description: redis_<%= @sentinel_port %> is the sentinel daemon.
### BEGIN INIT INFO
# Provides: redis_<%= @sentinel_port %>
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Short-Description: start and stop redis_<%= @sentinel_port %>
# Description: Redis daemon
### END INIT INFO

set -e

start()
{
    if [ -x $PIDFILE ]
    then
        echo "$PIDFILE exists, process is already running or crashed"
    else
        echo "Starting sentinel..."
        $EXEC
    fi
}

stop()
{
    if [ ! -f $PIDFILE ]
    then
        echo "$PIDFILE does not exist, process is not running"
    else
        PID=$(cat $PIDFILE)
        echo "Stopping sentinel ($PID)..."
        kill $PID
        echo "Sentinel stopped"
    fi
}

restart()
{
    stop
    echo "Sleeping for 3 seconds..."
    sleep 3
    start
}

status()
{
    if [ ! -f $PIDFILE ]
    then
  echo "$PIDFILE does not exist, redis is not running"
  exit 3
    elif [ ! -x /proc/$(cat $PIDFILE) ]
    then
  echo "$PIDFILE exists, process is not running though"
  exit 1
    else
  echo "sentinel is running with PID $(cat $PIDFILE)"
  exit 0
    fi
}

case "$1" in
    start)
  start
  ;;
    stop)
  stop
        ;;
    restart)
  restart
  ;;
    status)
  status
  ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|status}"
        ;;
esac
